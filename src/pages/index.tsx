import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";
import { ComponentProps, forwardRef, ReactNode, useState } from "react";
import ModalUnstyled from '@mui/base/ModalUnstyled'
import { AuthWithCredentials } from "@/components/auth/auth";

import clsx from "clsx";

const Modal = (props: ComponentProps<typeof ModalUnstyled>) => {
    return (
        <ModalUnstyled {...props} className='fixed right-0 bottom-0 top-0 left-0 flex items-center justify-center z-[1300]' />
    )
}

const BackdropUnstyled = forwardRef<
  HTMLDivElement,
  { open?: boolean; className: string }
>((props, ref) => {
  const { open, className, ...other } = props;
  return (
    <div
      className={clsx({ 'MuiBackdrop-open': open }, className)}
      ref={ref}
      {...other}
    />
  );
});

const Backdrop = () => {
    return(
        <BackdropUnstyled className='fixed right-0 bottom-0 top-0 left-0 z-[-1] bg-black/50' />
    )
}

const Home: NextPage = () => {
  const [isAuthPopupOpen, setIsAuthPopupOpen] = useState(false)

  const handleOpenAuthPopup = () => {
    setIsAuthPopupOpen(true)
  }

  const handleCloseAuthPopup = () => {
    setIsAuthPopupOpen(false)
  }

  const {data: session} = useSession()

  console.log(session, 'session')

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c] relative">
     
        {
            session?.user ? 
                <button 
                    onClick={() => signOut()}
                    className='absolute rounded bg-sky-600 w-16 h-8 text-white top-2 right-2 flex items-center justify-center font-sans
                        text-sm hover:bg-sky-700'
                >
                        Выйти {session.user.email}
                </button>
                :
                <button 
                    onClick={handleOpenAuthPopup}
                    className='absolute rounded bg-sky-600 w-16 h-8 text-white top-2 right-2 flex items-center justify-center font-sans
                        text-sm hover:bg-sky-700'
                >
                        Войти
                </button>
        }
        <Modal
            open={isAuthPopupOpen}
            onClose={handleCloseAuthPopup}
            slots={{backdrop: Backdrop}}
            disablePortal
        >
            <AuthWithCredentials onClose={handleCloseAuthPopup} />
        </Modal>
      </main>
    </>
  );
};

export default Home